package br.com.concessionaria.carsservice.controller;

import br.com.concessionaria.carsservice.service.CartExpirationService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

/**
 * Controller respons√°vel por opera√ß√µes administrativas da concession√°ria.
 * Fornece endpoints para manuten√ß√£o do sistema, limpeza de dados e opera√ß√µes especiais.
 * Acesso restrito para fun√ß√µes administrativas.
 */
@RestController
@RequestMapping("/admin") // Define que todos os endpoints come√ßam com /admin
public class AdminController {
    
    // Injeta automaticamente o servi√ßo de expira√ß√£o de carrinhos
    @Autowired
    private CartExpirationService cartExpirationService;
    
    /**
     * Executa limpeza manual de carrinhos expirados.
     * Endpoint: POST /admin/clean-expired-carts
     * Acesso: P√∫blico (pode ser restringido por seguran√ßa se necess√°rio)
     * 
     * √ötil para executar limpeza fora do hor√°rio autom√°tico agendado
     * ou para testes de funcionamento do sistema.
     * 
     * @return Resposta JSON com n√∫mero de carrinhos limpos
     */
    @PostMapping("/clean-expired-carts")
    public ResponseEntity<String> cleanExpiredCarts() {
        try {
            // Executa limpeza manual dos carrinhos expirados
            int cleanedCount = cartExpirationService.cleanExpiredCartsManually();
            
            // Retorna resultado da opera√ß√£o
            String message = String.format("‚úÖ Limpeza manual conclu√≠da com sucesso! %d carrinhos expirados foram removidos.", cleanedCount);
            
            System.out.println("üîß " + message);
            
            return ResponseEntity.ok(message);
            
        } catch (Exception e) {
            // Log do erro e resposta de erro
            String errorMessage = "‚ùå Erro na limpeza manual de carrinhos: " + e.getMessage();
            System.err.println(errorMessage);
            e.printStackTrace();
            
            return ResponseEntity.internalServerError().body(errorMessage);
        }
    }
    
    /**
     * Endpoint de status do sistema de limpeza autom√°tica.
     * Endpoint: GET /admin/cleanup-status
     * Acesso: P√∫blico
     * 
     * Fornece informa√ß√µes sobre o funcionamento do sistema de limpeza autom√°tica.
     * 
     * @return Resposta JSON com status do sistema
     */
    @GetMapping("/cleanup-status")
    public ResponseEntity<String> getCleanupStatus() {
        String status = "üîÑ Sistema de limpeza autom√°tica ATIVO\n" +
                       "‚è∞ Frequ√™ncia: A cada 60 segundos\n" +
                       "üïê Tempo de expira√ß√£o: 1 minuto ap√≥s adi√ß√£o ao carrinho\n" +
                       "üöÄ Para limpeza manual: POST /admin/clean-expired-carts";
                       
        return ResponseEntity.ok(status);
    }
}
